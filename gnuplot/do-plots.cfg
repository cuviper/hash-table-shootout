#!/usr/bin/gnuplot

set macros

data_path="results/"
set loadpath "./gnuplot"

# Variables, macros, subroutines

lastpoint="<awk '/./ {if (!last) print; last=$0} /^$/ {if (last) print last; print; last=$0}' "

linestyle="with lines title columnheader(1) ls IDX+1 lw 2"
pointoutlinestyle="with points ls IDX+1 lw 4 lc rgb '#000000' pt 7 notitle"
pointstyle="with points ls IDX+1 lw 2 pt 7 notitle"

plot_memory_over_time='\
load "common-memory-elapsed.cfg"; \
set output data_path.plot_id."-memory-time.png"; \
set title plot_heading."\n{/*0.5 AnonRSS, lower is better}"; \
set key top right; \
plot for [IDX=0:8] data_file i IDX u 1:2 @linestyle, for [IDX=0:8] (lastpoint.data_file) i IDX u 1:2 @pointoutlinestyle, for [IDX=0:8] (lastpoint.data_file) i IDX u 1:2 @pointstyle'

plot_memory_over_items='\
load "common-memory-items.cfg"; \
set output data_path.plot_id."-memory-items.png"; \
set title plot_heading."\n{/*0.5 AnonRSS, lower is better}"; \
plot for [IDX=0:8] data_file i IDX u ($5 * 1000):2 @linestyle, for [IDX=0:8] (lastpoint.data_file) i IDX u ($5 * 1000):2 @pointoutlinestyle, for [IDX=0:8] (lastpoint.data_file) i IDX u ($5 * 1000):2 @pointstyle'

plot_throughput_over_time='\
load "common-throughput-elapsed.cfg"; \
set output data_path.plot_id."-throughput-time.png"; \
set title plot_heading."\n{/*0.5 Throughput, higher is better}"; \
set key top right; \
plot for [IDX=0:8] data_file i IDX u 1:($4 * 1000) smooth csplines @linestyle, for [IDX=0:8] (lastpoint.data_file) i IDX u 1:($4 * 1000) @pointoutlinestyle, for [IDX=0:8] (lastpoint.data_file) i IDX u 1:($4 * 1000) @pointstyle'

plot_throughput_over_time_early='\
load "common-throughput-elapsed.cfg"; \
set output data_path.plot_id."-throughput-time-early.png"; \
set title plot_heading."\n{/*0.5 Throughput, higher is better}"; \
set key top right; \
set xrange [0:1]; \
plot for [IDX=0:8] data_file i IDX u 1:($4 * 1000) smooth csplines @linestyle, for [IDX=0:8] (lastpoint.data_file) i IDX u 1:($4 * 1000) @pointoutlinestyle, for [IDX=0:8] (lastpoint.data_file) i IDX u 1:($4 * 1000) @pointstyle'

plot_throughput_over_items='\
load "common-throughput-items.cfg"; \
set output data_path.plot_id."-throughput-items.png"; \
set title plot_heading."\n{/*0.5 Throughput, higher is better}"; \
set key top right; \
plot for [IDX=0:8] data_file i IDX u ($5 * 1000):($4 * 1000) smooth csplines @linestyle, for [IDX=0:8] (lastpoint.data_file) i IDX u ($5 * 1000):($4 * 1000) @pointoutlinestyle, for [IDX=0:8] (lastpoint.data_file) i IDX u ($5 * 1000):($4 * 1000) @pointstyle'

plot_memtime_over_items='\
load "common-memtime-items.cfg"; \
set output data_path.plot_id."-memtime-items.png"; \
set title plot_heading."\n{/*0.5 Total byte-seconds, lower is better}"; \
plot for [IDX=0:8] data_file i IDX u ($5 * 1000):6 @linestyle, for [IDX=0:8] (lastpoint.data_file) i IDX u ($5 * 1000):6 @pointoutlinestyle, for [IDX=0:8] (lastpoint.data_file) i IDX u ($5 * 1000):6 @pointstyle'

plot_memoverhead_over_items='\
load "common-memory-items.cfg"; \
set output data_path.plot_id."-memoverhead-items.png"; \
set title plot_heading."\n{/*0.5 AnonRSS per item, lower is better}"; \
set xrange [1000000<*:]; \
set key top right; \
plot for [IDX=0:8] data_file i IDX u ($5 * 1000):($2/($5 * 1000)) @linestyle, for [IDX=0:8] (lastpoint.data_file) i IDX u ($5 * 1000):($2/($5 * 1000)) @pointoutlinestyle, for [IDX=0:8] (lastpoint.data_file) i IDX u ($5 * 1000):($2/($5 * 1000)) @pointstyle'

plot_memoverhead_over_items_early='\
load "common-memory-items.cfg"; \
set output data_path.plot_id."-memoverhead-items-early.png"; \
set title plot_heading."\n{/*0.5 AnonRSS per item, lower is better}"; \
set xrange [0:100000]; \
set key top right; \
plot for [IDX=0:8] data_file i IDX u ($5 * 1000):($2/($5 * 1000)) @linestyle, for [IDX=0:8] (lastpoint.data_file) i IDX u ($5 * 1000):($2/($5 * 1000)) @pointoutlinestyle, for [IDX=0:8] (lastpoint.data_file) i IDX u ($5 * 1000):($2/($5 * 1000)) @pointstyle'

plot_all='\
data_file=data_path.plot_id.".txt"; \
eval (plot_memory_over_time); \
eval (plot_memory_over_items); \
eval (plot_throughput_over_time); \
eval (plot_throughput_over_time_early); \
eval (plot_throughput_over_items); \
eval (plot_memtime_over_items); \
eval (plot_memoverhead_over_items); \
'

plot_id="aging"
plot_heading="Integer aging"
eval (plot_all)

plot_id="sequential"
plot_heading="Inserting sequential integers"
eval (plot_all)

plot_id="delete"
plot_heading="Deleting sequential integers"
eval (plot_all);

plot_id="spaced"
plot_heading="Inserting spaced integers"
eval (plot_all)

plot_id="random"
plot_heading="Inserting random integers"
eval (plot_all);

plot_id="randomstring"
plot_heading="Inserting strings in random order"
eval (plot_all);

plot_id="agingstring"
plot_heading="String aging"
eval (plot_all);

plot_id="small"
plot_heading="Integer aging, small data set"
eval (plot_all);
